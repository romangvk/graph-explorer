{"version":3,"sources":["components/GraphDisplay.js","components/FloatingPanel.js","util/graph.js","App.js","reportWebVitals.js","index.js"],"names":["radius","GraphDisplay","_ref","nodes","links","onClickNode","display","useRef","force","useEffect","current","d3","strength","alphaDecay","svg","on","selectAll","attr","d","source","x","y","target","container","getBoundingClientRect","Math","max","min","width","height","resize","alpha","restart","window","addEventListener","link","data","id","exit","transition","ease","style","duration","remove","enter","insert","node","g","append","call","event","active","alphaTarget","fx","fy","merge","select","text","v","e","react_default","a","createElement","ref","FloatingPanel","children","className","addNode","_len","arguments","length","value","Array","_key","map","Object","objectSpread","concat","toConsumableArray","n","App","_useState","useState","_step","_arguments","_iterator","_createForOfIteratorHelper","s","done","err","f","_loop","i","undefined","reduce","acc","cur","push","G","_useState2","slicedToArray","graph","setGraph","nodeRefs","components_FloatingPanel","onClick","old","floor","random","key","el","type","onChange","_len2","_key2","_i","_id","filter","components_GraphDisplay","focus","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f606588.chunk.js","sourcesContent":["import './GraphDisplay.css';\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nlet radius = 4;\n\nfunction GraphDisplay({ nodes, links, onClickNode }) {\n    const display = useRef(null);\n    const force = useRef(null);\n\n    // Only runs once\n    useEffect(() => {\n        // Create force\n        force.current = d3.forceSimulation()\n            .force(\"gravity\", d3.forceManyBody())\n            .force(\"links\", d3.forceLink().strength(0.05))\n            .force(\"centerX\", d3.forceX().strength(0.005))\n            .force(\"centerY\", d3.forceY().strength(0.005))\n            .alphaDecay(0);\n\n        // Svg reference\n        let svg = d3.select(display.current);\n\n        // Move nodes and links every tick\n        force.current.on(\"tick\", function () {\n            svg.selectAll(\".link\")\n                .attr(\"x1\", (d) => { return d.source.x; })\n                .attr(\"y1\", (d) => { return d.source.y; })\n                .attr(\"x2\", (d) => { return d.target.x; })\n                .attr(\"y2\", (d) => { return d.target.y; });\n\n            // Bounding box\n            svg.selectAll(\".node\").attr(\"transform\", (d) => {\n                let container = display.current.getBoundingClientRect();\n                let x = Math.max(Math.min(container.width - radius, d.x), 0 + radius);\n                let y = Math.max(Math.min(container.height - radius, d.y), 0 + radius);\n                return \"translate(\" + x + \",\" + y + \")\";\n            });\n        });\n\n        // Recalculate centering forces on resize\n        const resize = () => {\n            let container = display.current.getBoundingClientRect();\n            force.current.force(\"centerX\").x(container.width / 2);\n            force.current.force(\"centerY\").y(container.height / 2);\n            force.current.alpha(1).restart();\n        }\n        window.addEventListener(\"resize\", () => {\n            resize();\n        });\n        resize();\n    }, []);\n\n    // Runs when nodes or links change\n    useEffect(() => {\n        // Svg reference\n        let svg = d3.select(display.current);\n\n        // Draw links\n        let link = svg.selectAll(\".link\").data(links, (d) => d.id);\n\n        // Animate removed links\n        link.exit().transition().ease(d3.easeExpOut).style(\"opacity\", 0).duration(500).remove();\n\n        // Create new links\n        link.enter().insert(\"line\", \":first-child\").attr(\"class\", \"link\");\n\n        // Draw nodes\n        let node = svg.selectAll(\".node\").data(nodes, (d) => d.id);\n\n        // Animate removed nodes\n        node.exit().transition().ease(d3.easeExpOut).style(\"opacity\", 0).duration(500).remove();\n\n        // Create new nodes\n        let g = node.enter().append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(d3.drag()\n                .on(\"start\", (event, d) => {\n                    if (!event.active) force.current.alphaTarget(0.3).restart();\n                    d.fx = d.x;\n                    d.fy = d.y;\n                })\n                .on(\"drag\", (event, d) => {\n                    d.fx = event.x;\n                    d.fy = event.y;\n                })\n                .on(\"end\", (event, d) => {\n                    if (!event.active) force.current.alphaTarget(0);\n                    d.fx = null;\n                    d.fy = null;\n                }));\n\n        // Draw circle\n        g.append(\"circle\").attr(\"r\", radius);\n\n        // Draw text\n        g.append(\"text\")\n            .attr(\"dx\", \"1em\")\n            .attr(\"dy\", \".35em\")\n            .merge(node.select(\"text\"))\n            .text((d) => d.v);\n\n        // Reinitialize force\n        force.current.nodes(nodes);\n        force.current.force(\"links\").links(links);\n    }, [nodes, links]);\n\n    // Runs when onClickNode changes\n    useEffect(() => {\n        d3.selectAll(\"g\").on(\"click\", (e, d) => {\n            onClickNode(d);\n        })\n    }, [onClickNode])\n    return (\n        <svg ref={display} width=\"100%\" height=\"100%\" />\n    );\n}\nexport default GraphDisplay;","import './FloatingPanel.css';\nimport React from 'react';\n\nfunction FloatingPanel({ children }) {\n    return (\n        <div className=\"floating\">\n            {children}\n        </div>\n    );\n}\n\nexport default FloatingPanel;","/**\n* Creates a new graph object\n* @return {Object} A new graph\n*/\nexport function create() {\n    // Return a new graph with no nodes or links\n    return { nodes: [], links: [], id: 0, n: 0 };\n}\n/**\n* Add a node to a graph\n* @param  {Object} g     The graph\n* @param  {...any} value The value for the new node\n* @return {Object}       A new graph containing the new node\n*/\nexport function addNode(g, ...value) {\n    // Create new nodes for each value\n    let id = g.id;\n    let nodes = value.map((v) => { return { v: v, id: id++ } });\n\n    // Return a new graph with the new nodes in g.nodes\n    return { ...g, nodes: [...g.nodes, ...nodes], id: id, n: g.n + nodes.length };\n}\n/**\n* Remove a node from a graph\n* @param  {Object} g  The graph\n* @param  {...number} id The id of the node to be removed\n* @return {Object}    A new graph that does not contain the node or any links with the node\n*/\nexport function removeNode(g, ...id) {\n    // Put ids in a map for constant lookup\n    let map = {}\n    for (const i of id)\n        map[i] = true;\n\n    // Remove the nodes from the nodes list\n    let nodes = g.nodes.filter((node) => !map[node.id]);\n\n    // Remove any links with the node\n    let links = g.links.filter((link) => !map[link.source.id] && !map[link.target.id] && !map[link.source] && !map[link.target]);\n\n    // Return a new graph with the updated node and link list\n    return { ...g, nodes: nodes, links: links, n: nodes.length };\n}\n/**\n* Add a link to a graph\n* @param  {Object} g       The graph\n* @param  {...number} link The source, target pair to be added\n* @return {Object}         A new graph containing a link between source and target\n*/\nexport function addLink(g, ...link) {\n    // Put ids in a map for constant lookup\n    let map = {}\n    for (const node of g.nodes) {\n        map[node.id] = true;\n    }\n\n    // Add valid links to a list\n    let links = []\n    for (let i = 1; i < link.length; i += 2) {\n        let source = link[i - 1];\n        let target = link[i];\n\n        // Check that the link is between two valid nodes\n        if (map[source] && map[target]) {\n            // Check that the link doesn't already exist\n            if (g.links.reduce((acc, cur) => {\n                return acc &&\n                    !(cur.source.id === source && cur.target.id === target) &&\n                    !(cur.source === source && cur.target === target);\n            }, true)) {\n                // Add the link to the list\n                links.push({ source: source, target: target });\n            }\n        }\n    }\n    // Return a new graph with the new links in g.links\n    return { ...g, links: [...g.links, ...links] };\n}\n/**\n* Remove a link from a graph\n* @param  {Object} g       The graph\n* @param  {...number} link The source, target pair to be removed\n* @return {Object}         A new graph that does not contain a link between source and target\n*/\nexport function removeLink(g, ...link) {\n    // Put all links in a map for constant lookup\n    let map = {};\n    for (let i = 1; i < link.length; i += 2) {\n        let source = link[i - 1];\n        let target = link[i];\n        if (!map[source])\n            map[source] = {};\n        map[source][target] = true;\n    }\n\n    // Remove all links\n    let links = g.links.filter((link) =>\n        !(map[link.source.id] && map[link.source.id][link.target.id])\n        && !(map[link.source] && map[link.source][link.target])\n    );\n\n    // Return a new graph with the new links in g.links\n    return { ...g, links: links };\n}","import './App.css';\nimport React, { useRef, useState } from 'react';\nimport GraphDisplay from './components/GraphDisplay';\nimport FloatingPanel from './components/FloatingPanel';\nimport * as G from './util/graph';\n\nfunction App() {\n  const [graph, setGraph] = useState(G.addLink(G.addNode(G.create(), 0, 1, 2), 1, 2, 2, 0));\n  const nodeRefs = useRef({})\n  return (\n    <div className=\"App\">\n      <FloatingPanel>\n        <button onClick={() => {\n          setGraph((old) => {\n            let value = Math.floor(Math.random() * 100);\n            return G.addNode(old, value);\n          });\n        }}>Add Node</button>\n        {graph.nodes.map((node, i) => {\n          return (\n            <input key={i} ref={(el) => (nodeRefs.current[node.id] = el)} type=\"text\" value={node.v} onChange={(e) => {\n              setGraph((old) => {\n                let nodes = [...old.nodes];\n                nodes[i].v = e.target.value;\n                return { ...old, nodes: nodes };\n              });\n            }}></input>\n          );\n        })}\n        <button onClick={() => {\n          setGraph((old) => G.removeNode(old, 0));\n        }}>Remove Node</button>\n      </FloatingPanel>\n      <GraphDisplay nodes={graph.nodes} links={graph.links}\n        onClickNode={(d) => {\n          nodeRefs.current[d.id].focus();\n          nodeRefs.current[d.id].select();\n        }} />\n    </div >\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}